    num_explored = 0
    
    """ Frontier part """
    start = Node(state=source, parent=None, action=None)
    frontier = QueueFrontier()
    frontier.add(start)


    """ Explored part """
    explored = set()
    
    """Loop until find a solution"""
    while True:
        if frontier.empty():
            raise Exception("Nothing !")
            
        node = frontier.remove() #choosing a node
        num_explored += 1 
        explored.add(node.state) #putting into explored
        
        """Adding neighbors to frontier"""
        for movie_id, person_id in neighbors_for_person(node.state):
            if not frontier.contains_state(person_id) and person_id not in explored:
                child = Node(state=person_id, parent=node, action=movie_id)
                frontier.add(child)
                
                #child means nodes with parent and action
                
                """If child is the goal, the solution !"""
                if child.state == target:
                    movies = []
                    people = []
                    solution = []
                    while child.parent is not None:
                        movies.append(child.action)
                        people.append(child.state)
                        child = child.parent
                    #have to do this to show in correct form    
                    movies.reverse  
                    people.reverse
                    x = zip(movies,people)
                    for movie,person in x:
                        solution.append((movie,person))
                    
                    return solution
             
    
